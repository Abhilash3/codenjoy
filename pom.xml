<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <module.name>icancode</module.name>
        <java.version>1.7</java.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-lang.version>2.6</commons-lang.version>
        <org.json.version>20160212</org.json.version>

        <fest-reflect.version>1.4.1</fest-reflect.version>
        <fest-assert.version>1.4</fest-assert.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>

        <maven-compiler.version>3.5.1</maven-compiler.version>
        <maven-resources.version>2.7</maven-resources.version>
        <maven-antrun.version>1.8</maven-antrun.version>
        <maven-surefire.version>2.13</maven-surefire.version>
        <maven-sonar-jacoco.version>3.8</maven-sonar-jacoco.version>
        <maven-jacoco.version>0.7.6.201602180812</maven-jacoco.version>
        <engine.version>1.0.5</engine.version>
    </properties>

    <groupId>com.codenjoy</groupId>
    <artifactId>icancode-engine</artifactId>
    <version>1.0.4</version>

    <repositories>
        <repository>
            <id>codenjoy-releases</id>
            <url>https://github.com/codenjoyme/codenjoy-repo/raw/master/snapshots</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>engine</artifactId>
            <version>${engine.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons-collections.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-reflect</artifactId>
            <version>${fest-reflect.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${org.json.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>${fest-assert.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <encoding>utf8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources.version}</version>
                <configuration>
                    <encoding>utf8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun.version}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <configuration>

                            <target>
                                <delete dir="libs"/>

                                <copy file="../../README.txt" tofile="README.txt" failonerror="false"/>

                                <copy file="../engine/engine-${project.version}.jar" tofile="libs/engine-${project.version}.jar" failonerror="false"/>
                                <copy file="../engine/engine-${project.version}-sources.jar" tofile="libs/engine-${project.version}-sources.jar" failonerror="false"/>
                                <copy file="../engine/pom.xml" tofile="libs/pom.xml" failonerror="false"/>
                                <copy file="../engine/setup.bat" tofile="libs/setup.bat" failonerror="false"/>

                                <delete file="src/main/webapp/resources/user/${module.name}-servers.zip"/>

                                <zip destFile="src/main/webapp/resources/user/${module.name}-servers.zip"
                                     basedir=""
                                     includes="src/main/java/com/codenjoy/dojo/${module.name}/client/*.java,
                                               src/main/java/com/codenjoy/dojo/${module.name}/model/Elements.java,
                                               src/test/java/com/codenjoy/dojo/${module.name}/client/*.java,
                                               libs/*.*,
                                               README.txt,
                                               pom.xml"
                                     excludes="src/main/java/com/codenjoy/dojo/${module.name}/client/ai/*,
                                               src/test/java/com/codenjoy/dojo/${module.name}/client/ai/*"
                                     update="true"/>
                            </target>

                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>${maven-jacoco.version}</version>
              <executions>
                <execution>
                  <id>jacoco-initialize</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                  </configuration>
                </execution>
                <execution>
                  <id>jacoco-site</id>
                  <phase>test</phase>
                  <goals>
                    <goal>report</goal>
                  </goals>
                  <configuration>
                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                  </configuration>
                </execution>
              </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>coverage-per-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- Minimal supported version is 2.4 -->
                        <version>${maven-surefire.version}</version>
                        <configuration>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.sonar.java.jacoco.JUnitListener</value>
                                </property>
                            </properties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.sonarsource.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${maven-sonar-jacoco.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
