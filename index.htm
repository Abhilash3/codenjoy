<!DOCTYPE html>
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="./files/style.css">

<script type="text/javascript" src="./files/jquery-3.1.0.js"></script>
<script type="text/javascript" src="./files/jquery-ui.js"></script>
<script type="text/javascript">

/*
 * This work by http://www.elated.com is licensed under a Creative Commons Attribution 3.0 Unported License (http://creativecommons.org/licenses/by/3.0/)
 * Saved from url=(0131)http://www.elated.com/res/File/articles/development/javascript/jquery/drag-and-drop-with-jquery-your-essential-guide/card-game.html
 **/
 
$(init);

function init() {

	var commands = [
			{type:1, title:'˃'}, // move cursor right
			{type:1, title:'˂'}, // move cursor left
			{type:1, title:'˄'}, // move cursor up
			{type:1, title:'˅'}, // move cursor down
			{type:1, title:'»'}, // start cursor // var value = null;
			{type:1, title:'•'}, // finish cursor
			
			{type:5, title:'←'}, // robot.goLeft();
			{type:5, title:'→'}, // robot.goRight();
			{type:5, title:'↑'}, // robot.goUp();
			{type:5, title:'↓'}, // robot.goDown();
			{type:5, title:'Go'}, // robot.go(value);
			
			{type:7, title:'If'}, // if (value == getNextValue()) { } else { }
			{type:7, title:'Sc'}, // value = robot.getScanner().at(value);
			{type:7, title:'Cf'}, // value = robot.cameFrom();
			{type:7, title:'Pd'}, // value = robot.previousDirection();
			
			{type:4, title:'L'}, // value = "LEFT"
			{type:4, title:'R'}, // value = "RIGHT"
			{type:4, title:'U'}, // value = "UP"
			{type:4, title:'D'}, // value = "DOWN"
			
			{type:6, title:'Nu'}, // value = null
			
			{type:3, title:'W'}, // value = "WALL"
			{type:3, title:'N'}, // value = "NONE"
			{type:3, title:'S'}, // value = "START"
			{type:3, title:'E'}, // value = "END"
			{type:3, title:'G'}, // value = "GOLD"
			{type:3, title:'B'}, // value = "BOX"
			{type:3, title:'H'}, // value = "HOLE"	
		]

	var size = 10;
	for (var y = 0; y < size; y++) {
		for (var x = 0; x < size; x++) {
			$('<div></div>')
				.data('data-point', {x : x, y : y})
				.appendTo('#cardSlots');
		}
	}
	
	for (var index = 0; index < commands.length; index++) {
		for (var count = 0; count < 6; count++) {
			$('<div></div>')
				.data('data-type', commands[index])
				.appendTo('#cardPile');
		}
	}
	var createNewOnPile = function(element) {
		var type = $(element).data('data-type');
		$('<div class="type-' + type.type + '">' + type.title  + '</div>')
			.data('data-type', type)
			.appendTo(element);	
	}
	
	$('#cardPile>div').each(function(index, element) {
		createNewOnPile(element);	
	});
	
	var park = function(card, slot) {
		var fromSlot = card.data('parkedTo');
		if (!!fromSlot) {
			fromSlot.data('parked', null);
		}
		var initialSlot = card.data('initial');
		if (!initialSlot) {
			card.data('initial', slot);
		}
		slot.data('parked', card);
		card.data('parkedTo', slot);
		card.position({of: slot, my: 'left top', at: 'left top'});
	}
		
	var isOnCardPile = function(slot) {
		return slot.parent().attr('id') == 'cardPile';
	}

	var doNotRevert = false;
	$('#cardPile>div>div').draggable({
		cursor: 'move',
		revert: function (event, ui) {
			if (typeof event == 'object') {
				var slot = event;
				var card = $(this);
				var parked = slot.data('parked');
				if (!parked) {
					return false;
				}
				
				if (parked[0] == card[0]) {
					return false;
				}
				
				if (doNotRevert) {
					doNotRevert	= false;
					return false;
				}
		
				return true;
			}
			return !event;
		}
	})
	
	var moveToInitial = function(card) {
		var slot = card.data('initial');
		park(card, slot);
	}
	
	$('#cardPile>div>div').each(function(index, element) {
		var card = $(this);
		var slot = card.parent();
		park(card, slot);
	}).dblclick(function(element) {
		var card = $(this);
		if (isOnCardPile(card.data('parkedTo'))) {
			return;
		} 
		moveToInitial(card);
	});

    $('#cardSlots>div, #cardPile>div').droppable({
		hoverClass: 'hovered',
		drop: function (event, ui) {
			var slot = $(this);
			if (slot.hasClass('ui-draggable')) {
				slot = slot.data('parkedTo');
			}
			var card = ui.draggable;

			var busy = !!slot.data('parked')
			if (busy) {
				if (isOnCardPile(slot)) {
					doNotRevert = true;
					moveToInitial(card);
				}
				return;
			}			
			
			if (isOnCardPile(slot)) {
				moveToInitial(card);
			} else {
				park(card, slot);
			}
		}
	});
}


</script>

</head>
<body style="cursor: auto;">

<div id="content">
  <div id="cardPile"></div>  
  <div id="cardSlots"></div>
</div>
</body></html>